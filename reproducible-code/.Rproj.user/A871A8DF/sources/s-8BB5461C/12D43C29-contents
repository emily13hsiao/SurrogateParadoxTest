pkgname <- "SurrogateParadoxTest"
source(file.path(R.home("share"), "R", "examples-header.R"))
options(warn = 1)
library('SurrogateParadoxTest')

base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
cleanEx()
nameEx("SurrogateParadoxTest-package")
### * SurrogateParadoxTest-package

flush(stderr()); flush(stdout())

### Name: SurrogateParadoxTest-package
### Title: Empirical Testing of Surrogate Paradox Assumptions
### Aliases: SurrogateParadoxTest-package SurrogateParadoxTest
### Keywords: package

### ** Examples

~~ simple examples of the most important functions ~~



cleanEx()
nameEx("test_assumptions")
### * test_assumptions

flush(stderr()); flush(stdout())

### Name: test_assumptions
### Title: Test assumptions to prevent surrogate paradox
### Aliases: test_assumptions

### ** Examples


m_c <- function(s) 1 + 2 * s
m_t <- function(s) 1 + 2 * s
    
s_c <- rnorm(100, 3, 1)
y_c <- sapply(s_c, function(s) rnorm(1, m_c(s), 1))
s_t <- rnorm(100, 3, 1)
y_t <- sapply(s_t, function(s) rnorm(1, m_t(s), 1))

test_assumptions(
s0 = s_c, y0 = y_t, s1 = s_t, y1 = y_t, type = "sd"
)




### * <FOOTER>
###
cleanEx()
options(digits = 7L)
base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
grDevices::dev.off()
###
### Local variables: ***
### mode: outline-minor ***
### outline-regexp: "\\(> \\)?### [*]+" ***
### End: ***
quit('no')
