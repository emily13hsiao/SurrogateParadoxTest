
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "SurrogateParadoxTest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "SurrogateParadoxTest-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('SurrogateParadoxTest')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("test_assumptions")
> ### * test_assumptions
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: test_assumptions
> ### Title: Test assumptions to prevent surrogate paradox
> ### Aliases: test_assumptions
> 
> ### ** Examples
> 
> 
> m_c <- function(s) 1 + 2 * s
> m_t <- function(s) 1 + 2 * s
>     
> s_c <- rnorm(100, 3, 1)
> y_c <- sapply(s_c, function(s) rnorm(1, m_c(s), 1))
> s_t <- rnorm(100, 3, 1)
> y_t <- sapply(s_t, function(s) rnorm(1, m_t(s), 1))
> 
> test_assumptions(
+ s0 = s_c, y0 = y_t, s1 = s_t, y1 = y_t, type = "sd"
+ )
$result
[1] "Stochastic dominance assumption: Holds"

$sd_result
$sd_result$s_hat
[1] 0.5105275

$sd_result$p.value
[1] 0.5937621

$sd_result$reject
[1] FALSE


> 
> ## No test: 
> test_assumptions(
+ s0 = s_c, y0 = y_t, s1 = s_t, y1 = y_t, type = "all")
$result
  Assumption                               Result         
1 "Stochastic dominance assumption"        "Holds"        
2 "Monotonicity assumption (control)"      "Holds"        
3 "Monotonicity assumption (treatment)"    "Holds"        
4 "Non-negative residual treatment effect" "Does not hold"

$sd_result
$sd_result$s_hat
[1] 0.5105275

$sd_result$p.value
[1] 0.5937621

$sd_result$reject
[1] FALSE


$monotonicity0_result
$monotonicity0_result$T_m_value
[1] 8.460186

$monotonicity0_result$p_val
[1] 0.1

$monotonicity0_result$reject
[1] FALSE

$monotonicity0_result$T_m_samples
  [1]  6.243107  5.864332  5.994970  6.463240  8.668005  6.970898  8.809088
  [8]  6.554988  7.511378  6.338729  8.218042  6.525087  5.080088  7.158776
 [15]  6.350360  7.307846  8.516954  7.101625  6.990987  7.779785  6.035277
 [22]  6.476185  8.130596  6.849466  6.542303  5.521327  6.784625  7.604615
 [29]  6.963473  8.242725  9.122361  6.773512  6.523607  5.865801  8.540472
 [36]  6.078536  8.429397  8.147444  7.087260  8.106392  6.963691  6.262126
 [43]  5.460747  4.954195  7.233989  8.325049  8.479803  5.427315  8.326105
 [50]  7.710582  4.457553  6.759776  5.328822  5.734468  5.506898  7.933537
 [57]  7.699662  6.022256  6.795415  9.150467  5.589510  7.571929  6.559464
 [64]  7.439150  5.240814  7.526943  4.783955  8.543631  6.404306  6.559862
 [71]  8.723234  7.731442  5.804696  6.414646  7.819438  7.465809  6.666304
 [78]  7.808824  5.259448  5.569809  5.829308  6.019008  7.481815  7.527311
 [85]  5.150399  5.767692  7.397833  7.340533 10.029184  7.878966  5.613074
 [92]  6.505709  7.781585  7.082081  6.525713  6.935797  7.182390  7.670862
 [99]  7.743422  7.456275


$monotonicity1_result
$monotonicity1_result$T_m_value
[1] 2.170324

$monotonicity1_result$p_val
[1] 0.97

$monotonicity1_result$reject
[1] FALSE

$monotonicity1_result$T_m_samples
  [1] 2.485707 2.797035 2.750889 2.873750 3.212471 2.230196 2.581298 2.682992
  [9] 2.449311 2.797676 2.386733 2.882247 3.306083 2.922059 3.038238 2.712417
 [17] 2.926634 3.498615 2.727171 3.270613 2.682033 2.463204 2.786155 3.568073
 [25] 3.293757 3.286322 2.119079 2.383421 3.060823 2.625095 2.416253 3.090433
 [33] 3.285517 2.161227 2.801876 2.924870 2.398409 3.022635 2.357511 2.702815
 [41] 2.816266 2.633602 3.481439 3.140646 2.076641 3.044715 2.774109 2.680504
 [49] 3.684929 2.966748 2.448666 2.816364 2.573198 2.796683 2.293510 2.831918
 [57] 3.651833 2.239275 3.135639 2.860085 2.424408 2.454357 2.869887 3.168988
 [65] 3.617478 3.317456 2.530777 2.726869 2.836333 2.589867 2.845347 2.941642
 [73] 2.968157 2.710881 2.765929 2.636062 2.451490 2.907743 2.416371 2.630051
 [81] 2.708697 2.462496 3.731380 2.543220 3.796928 2.810253 2.475031 2.962630
 [89] 2.488554 3.789108 2.181945 2.193181 2.882590 3.052749 2.901124 2.874176
 [97] 2.319821 3.343747 2.837944 3.148232


$nnr_result
$nnr_result$p_value
[1] 0

$nnr_result$reject
[1] TRUE

$nnr_result$s_hat
[1] 27.0154

$nnr_result$s_vec
  [1]  6.58860894 16.11574224 10.69949937  6.80052618  4.05173279  5.67237144
  [7]  7.72586081  8.98503697  4.32300566  8.51234734  4.81161212  6.54462012
 [13] 14.27649625  5.80524459  8.11926649  0.86109937  8.15487836  8.68078195
 [19]  9.04771939  3.44864230 13.09378519  8.10806939  8.30775515  5.73029348
 [25] 17.03750067  6.91695190  1.51996270 15.71033021 12.54145691 12.46254144
 [31]  8.42336076 14.62003128  6.62049859 11.02500763  6.69666289  9.94937734
 [37]  7.86520793 13.05957355 17.52856964  4.77139902 -0.28145477  9.88128329
 [43] 11.33033746  3.07528327  7.42129738  9.02296487 11.65308958  6.17818631
 [49] 17.12980725  6.22597866  8.07160007  7.58081009 10.55078421 20.84510545
 [55]  4.86193430  6.25828750  9.01154865 10.51981236 11.88799220  0.19915186
 [61]  5.88889029  6.28213238  6.88886420 15.82145224  8.94906971 14.34713462
 [67] 10.76179882  7.84543631  5.26054030 13.91689359  7.80476438  6.14505536
 [73]  7.61711714 10.70815858  8.55000337  1.78606449 13.01090722  2.64414673
 [79] 14.86735321 11.25705529 10.73243401  3.28465920  9.25058648  5.00691816
 [85]  9.82977315 15.72737453  3.23080807 12.46910588  5.21082537  9.99597115
 [91] 10.62944193 10.74787688 13.16585488  3.98579702  7.68605019  7.45198434
 [97]  9.83661246 11.57078216  7.81644208  6.72219949  8.67382275  6.88217587
[103] 10.47079541  3.05721958  5.46179975  7.17322204 11.37094263  9.43811435
[109]  3.79052402 10.43613057  8.92018276  2.36648691  4.83647044 11.68503676
[115] 10.45226814  7.95806833  4.88936602  3.73141465 11.94080582  4.47746853
[121]  9.29720133  3.95741307  7.14823376  4.84405205  9.47723493  5.70372411
[127]  8.88528791  9.73387263  4.97793962  7.32324629  5.13247712  8.32434435
[133]  8.38368218 16.15777341  6.60409409  9.34576481  5.26385236 10.07607400
[139] 17.65342126 11.58475929  6.38622168  8.56391648  4.76312490  9.02426141
[145]  5.61672510  4.49952846 10.35014112 18.32129903 16.63046970  5.99264374
[151] 12.49762622  9.58352588  4.19035485  7.78414759 11.61463432  8.66863120
[157]  8.15060976 11.29950219 11.22764932  4.37312586 11.83755352 16.81041328
[163]  7.73641668  7.64826957  9.64376926  5.28468079 14.38989764  8.57111439
[169]  6.37202291  3.21184153  7.70480334 17.71344288  9.50952426 16.22873447
[175] 13.39939178 10.70370257  7.07626669 -0.05327499  8.29833684  8.57279488
[181]  7.34045723 10.45352487  7.20707092 14.75125586  6.25864696  5.59176746
[187] 14.23919330  2.84434494 14.51066705 11.29958752 10.03374364 13.72711698
[193]  6.76400272 10.75377900 11.96729434  6.86528140  6.61988512  9.05836416
[199] 15.66652862  5.54585708


> ## End(No test)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("test_assumptions", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  10.031 0.079 11.027 0.003 0.003 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
